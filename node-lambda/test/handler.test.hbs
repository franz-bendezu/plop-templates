// Imports
import { APIGatewayProxyEvent } from 'aws-lambda';
import { index } from '../../src/{{kebabCase moduleName}}/handler';
import {{pascalCase name}}DTO from '../../src/{{kebabCase moduleName}}/dto/{{kebabCase name}}.dto';
import { RuntimeError } from '../../src/{{kebabCase moduleName}}/common/error/runtime-error';
import { ApiGatewayResponse, ValidationMessage } from '../../src/{{kebabCase moduleName}}/common/response/api-gateway';
import { StatusMessages } from '../../src/{{kebabCase moduleName}}/common/response/status-message';
import { {{camelCase name}}Controller } from '../../src/{{kebabCase moduleName}}/controller/{{kebabCase name}}.provider';

const invokeHandler = async (queryParams?: IHandler{{pascalCase name}}QueryParams) => {
    const event: APIGatewayProxyEvent = {
        body: null,
        headers: {},
        queryStringParameters: queryParams || {},
        stageVariables: null,
        multiValueHeaders: {},
        httpMethod: '',
        isBase64Encoded: false,
        path: '',
        pathParameters: null,
        multiValueQueryStringParameters: null,
        requestContext: {
            accountId: '',
            apiId: '',
            authorizer: {},
            protocol: '',
            httpMethod: '',
            identity: {
                accessKey: null,
                accountId: null,
                apiKey: null,
                apiKeyId: null,
                caller: null,
                clientCert: null,
                cognitoAuthenticationProvider: null,
                cognitoAuthenticationType: null,
                cognitoIdentityId: null,
                cognitoIdentityPoolId: null,
                principalOrgId: null,
                sourceIp: '',
                user: null,
                userAgent: null,
                userArn: null
            },
            path: '',
            stage: '',
            requestId: '',
            requestTimeEpoch: 0,
            resourceId: '',
            resourcePath: ''
        },
        resource: ''
    };
    return index(event, {} as any, {} as any);
};

jest.mock('../../src/{{kebabCase moduleName}}/controller/{{kebabCase name}}.provider');

describe('index handler', () => {
    // Test
});
