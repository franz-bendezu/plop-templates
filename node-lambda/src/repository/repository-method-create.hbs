$<imports>
import I{{pascalCase name}}ResultRow from '../interface/{{kebabCase name}}-query-result.interface';
import IBase{{pascalCase name}} from '../interface/base-{{dashCase name}}.interface';$<code>$<methods>
    async save(data: IBase{{pascalCase name}}): Promise<{{pascalCase name}}> {
        try {
            const queryResult = await this.pgClient.query<I{{pascalCase name}}ResultRow>(
                `INSERT INTO {{snakeCase name}}
                 (NAME{{#each rowProperties}}, {{snakeCase name}}{{/each}})
                  VALUES ($$1{{#each rowProperties}}, ${{add @index 2}}{{/each}}) 
                  RETURNING ID, NAME, CREATED_AT, MODIFIED_AT, CREATED_BY, MODIFIED_BY
                  {{#each rowProperties}}, {{snakeCase name}}{{/each}}`,
                [
                    data.name,
                    {{#each properties}}
                    data.{{camelCase name}},
                    {{/each}}
                ]
            );

            const row = queryResult.rows[0];
            return new {{pascalCase name}}(
                row.ID,
                row.NAME,
                row.CREATED_AT,
                row.MODIFIED_AT,
                row.CREATED_BY,
                row.MODIFIED_BY,
                {{#each rowProperties}}
                row.{{name}},
                {{/each}}
            );
        } catch (error) {
            throw new RuntimeError({
                statusMessage: 'Bennu Database error',
                cause: error,
            });
        }
    }